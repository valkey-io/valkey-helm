# Number of Valkey replicas (minimum 3 for sentinel mode)
replicaCount: 3

standalone:
  enabled: true

sentinel:
  enabled: false

  # Sentinel port
  port: 26379

  # Quorum: number of Sentinels that must agree primary is down
  # Recommendation: (replicas / 2) + 1
  quorum: 2

  # Time before instance considered down (milliseconds)
  downAfterMilliseconds: 30000

  # Failover timeout in milliseconds
  failoverTimeout: 180000

  # Number of replicas syncing simultaneously during failover
  parallelSyncs: 1

  # Sentinel authentication (recommended for production)
  auth:
    enabled: true
    password: "SuperSecret1"  # Use same password as Valkey for simplicity
    existingSecret: ""
    existingSecretPasswordKey: "sentinel-password"

  # Sentinel resources
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # Sentinel pod anti-affinity (spread across nodes)
  antiAffinity:
    enabled: true
    type: hard  # hard or soft
    topologyKey: kubernetes.io/hostname

replication:
  # Replica configuration
  readOnly: true

  # Write safety: minimum replicas that must be connected
  # for primary to accept writes
  minReplicas:
    toWrite: 1
    maxLag: 10  # seconds

  # Replication behavior
  disklessSync: true
  disklessSyncDelay: 5  # seconds

  # Valkey pod anti-affinity (spread across nodes)
  antiAffinity:
    enabled: true
    type: hard  # hard or soft
    topologyKey: kubernetes.io/hostname

networkPolicy:
  enabled: true
  ingress:
    # Allow all traffic from same namespace to Valkey and Sentinel ports
    - from:
      - podSelector: {}
      ports:
      - protocol: TCP
        port: 6379
      - protocol: TCP
        port: 26379

image:
  repository: docker.io/valkey/valkey
  pullPolicy: IfNotPresent
  tag: ""  # Uses chart appVersion

service:
  type: ClusterIP
  port: 6379
  nodePort: 0
  annotations: {}
  labels: {}

dataStorage:
  enabled: true
  className: ""
  requestedSize: 10Gi
  accessModes:
    - ReadWriteOnce
  # Keep PVCs on deletion for data safety
  keepPvc: true
  # Sentinel storage size
  sentinelSize: 1Gi

auth:
  enabled: true
  password: "SuperSecret1"
  # For production, use existingSecret instead of password
  existingSecret: ""
  existingSecretPasswordKey: "password"

  # Default ACL rules (legacy - used only if auth.enabled is true)
  aclConfig: |
    # Users and permissions can be defined here
    # Example:
    # user default off
    # user default on >defaultpassword ~*  &* +@all

# Resources for Valkey data nodes
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 200m
    memory: 256Mi

metrics:
  enabled: true

  exporter:
    resources:
      limits:
        cpu: 50m
        memory: 64Mi
      requests:
        cpu: 50m
        memory: 64Mi

  serviceMonitor:
    enabled: true
    interval: 30s

podDisruptionBudget:
  enabled: true
  minAvailable: 2
  # maxUnavailable: 1

backup:
  # Enable automated backups
  enabled: false

  # Hourly backups
  schedule: "0 * * * *"

  # Retention policy: keep last N backups
  # With hourly backups, 240 = 10 days of history
  # Adjust based on your storage capacity
  retention:
    hourly: 96  # Keep last 96 backups (3 days with hourly schedule)

  # S3/MinIO storage configuration
  storage:
    type: s3  # or "minio" for MinIO

    s3:
      # Bucket name (required)
      bucket: "valkey-backups"

      # Region (for AWS S3)
      region: "us-east-1"

      # MinIO endpoint (leave empty for AWS S3)
      # Example: "https://minio.example.com" or "http://minio:9000"
      endpoint: ""

      # Path within bucket
      prefix: "production/valkey/"

      # Use path-style addressing (required for MinIO)
      pathStyle: false

      # Credentials via existing Secret (recommended)
      # Create secret with: kubectl create secret generic s3-backup-creds \
      #   --from-literal=access-key-id=AKIAIOSFODNN7EXAMPLE \
      #   --from-literal=secret-access-key=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      existingSecret: "s3-backup-creds"

      # Or specify credentials directly (not recommended for production)
      # accessKeyId: ""
      # secretAccessKey: ""

  # Compression (enabled by default)
  compression:
    enabled: true
    level: 6

  # Resources for backup job
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi

# Add custom valkey.conf directives here
valkeyConfig: ""
