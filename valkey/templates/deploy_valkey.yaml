{{- $fullname := include "valkey.fullname" . }}
{{- $storage := .Values.dataStorage }}
{{- $createPVC := and $storage.enabled (not (empty $storage.requestedSize)) (empty $storage.persistentVolumeClaimName) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "valkey.fullname" . }}
  labels:
    {{- include "valkey.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.deploymentStrategy }}
  selector:
    matchLabels:
      {{- include "valkey.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "valkey.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/initconfig: {{ include (print $.Template.BasePath "/init_config.yaml") . | sha256sum | trunc 32 }}
    spec:
      {{ (include "valkey.imagePullSecrets" .) | nindent 6 }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automount }}
      serviceAccountName: {{ include "valkey.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      
      initContainers:
        - name: {{ .Chart.Name }}-init
          image: {{ include "valkey.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: [ "/scripts/init.sh" ]
          volumeMounts:
            - name: {{ .Values.dataStorage.volumeName }}
              mountPath: /data
            - name: scripts
              mountPath: /scripts
            {{- if .Values.valkeyConfig }}
            - name: valkey-config
              mountPath: /usr/local/etc/valkey/valkey.conf
              subPath: valkey.conf
            {{- end }}
            {{- if .Values.extraSecretValkeyConfigs }}
            - name: extravalkeyconfigs-volume
              mountPath: /extravalkeyconfigs
            {{- end }}
          {{- with .Values.initResources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

      {{- with .Values.extraInitContainers }}
      {{- toYaml . | nindent 8 }}
      {{- end }}

      containers:
        - name: {{ include "valkey.fullname" . }}
          image: {{ include "valkey.image" . }}
          command: [ "valkey-server" ]
          args: [ "/data/conf/valkey.conf" ]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: "{{ $val }}"
            {{- end }}
            - name: VALKEY_LOGLEVEL
              value: "{{ .Values.valkeyLogLevel }}"
          ports:
            - name: tcp
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          startupProbe:
            exec:
              command: [ "sh", "-c", "valkey-cli ping" ]
          livenessProbe:
            exec:
              command: [ "sh", "-c", "valkey-cli ping" ]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.dataStorage.volumeName }}
              mountPath: /data
            {{- range $secret := .Values.extraValkeySecrets }}
            - name: {{ $secret.name }}-valkey
              mountPath: {{ $secret.mountPath }}
            {{- end }}
            {{- range $config := .Values.extraValkeyConfigs }}
            - name: {{ $config.name }}-valkey
              mountPath: {{ $config.mountPath }}
            {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "valkey.fullname" . }}-init-scripts
            defaultMode: 0555
        {{- if .Values.valkeyConfig }}
        - name: valkey-config
          configMap:
            name: {{ include "valkey.fullname" . }}-config
        {{- end }}
        {{- range .Values.extraValkeySecrets }}
        - name: {{ .name }}-valkey
          secret:
            secretName: {{ .name }}
            defaultMode: {{ .defaultMode | default 0440 }}
        {{- end }}
        {{- range .Values.extraValkeyConfigs }}
        - name: {{ .name }}-valkey
          configMap:
            name: {{ .name }}
            defaultMode: {{ .defaultMode | default 0440 }}
        {{- end }}
        {{- if .Values.metrics.enabled }}
        {{- range .Values.metrics.exporter.extraExporterSecrets }}
        - name: {{ .name }}-exporter
          secret:
            secretName: {{ .name }}
            defaultMode: {{ .defaultMode | default 0440 }}
        {{- end }}
        {{- end }}
        - name: {{ $storage.volumeName }}
        {{- if $storage.persistentVolumeClaimName }}
          persistentVolumeClaim:
            claimName: {{ $storage.persistentVolumeClaimName }}
        {{- else if $createPVC }}
          persistentVolumeClaim:
            claimName: {{ include "valkey.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
